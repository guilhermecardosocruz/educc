import { PDFDocument, StandardFonts, rgb } from "pdf-lib";
import { ClassSummary } from "@/lib/analytics/attendance";

export async function buildGroupReportPDF({
  groupName,
  from,
  to,
  summaries,
}: {
  groupName: string;
  from: string;
  to: string;
  summaries: ClassSummary[];
}): Promise<Uint8Array> {
  const pdfDoc = await PDFDocument.create();
  const page = pdfDoc.addPage([842, 595]); // A4 landscape
  const { height } = page.getSize();

  const font = await pdfDoc.embedFont(StandardFonts.Helvetica);
  let y = height - 50;

  page.drawText(`Relatório de Presenças — Grupo: ${groupName}`, {
    x: 50,
    y,
    size: 16,
    font,
    color: rgb(0, 0, 0),
  });
  y -= 25;

  page.drawText(`Período: ${from} a ${to}`, {
    x: 50,
    y,
    size: 10,
    font,
    color: rgb(0.3, 0.3, 0.3),
  });
  y -= 40;

  for (const s of summaries) {
    page.drawText(`Turma: ${s.className}`, {
      x: 50,
      y,
      size: 13,
      font,
      color: rgb(0, 0, 0),
    });
    y -= 20;

    page.drawText(`Aulas no período: ${s.lessonsCount}`, { x: 60, y, size: 10, font });
    y -= 15;
    page.drawText(`Média de presentes (abs.): ${s.avgPresentAbsolute}`, { x: 60, y, size: 10, font });
    y -= 15;
    page.drawText(`Média de presença (%): ${s.avgPresentPercent}%`, { x: 60, y, size: 10, font });
    y -= 25;

    page.drawText("Top 5 mais faltantes:", { x: 60, y, size: 11, font });
    y -= 15;

    if (s.topAbsentees.length === 0) {
      page.drawText("— Sem dados de faltas no período.", { x: 70, y, size: 10, font });
      y -= 20;
    } else {
      for (const [i, st] of s.topAbsentees.entries()) {
        page.drawText(`${i + 1}. ${st.name} — ${st.absences} falta(s)`, {
          x: 70,
          y,
          size: 10,
          font,
        });
        y -= 15;
      }
    }
    y -= 20;
  }

  const pdfBytes = await pdfDoc.save();
  return pdfBytes;
}
